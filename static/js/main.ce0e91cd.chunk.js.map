{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortedGoods","goods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","this","className","type","classNames","onClick","setState","ALPHABET","LENGTH","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAkC,CAChCC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,4CAME,WAAU,IAAD,OAuBP,IAAMC,EAtBN,SACEC,EADF,GAGG,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,IAAK,WACH,OAAOO,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAINR,EAAaG,EAAaM,UAAYN,EAG3BO,CAAkBf,EAAiBgB,KAAKd,OAE5D,EAAiCc,KAAKd,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAElB,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAyB,aAAbhB,IAGhBiB,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUJ,EAASuB,YATpD,iCAcA,wBACEJ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAyB,WAAbhB,IAGhBiB,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUJ,EAASwB,UATpD,4BAcA,wBACEL,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAA2B,IAAfd,IAGhBe,QAAS,kBAAM,EAAKC,UAAS,SAAAnB,GAAK,MAAK,CACrCG,YAAaH,EAAMG,gBAVvB,qBAgBe,SAAbF,IAAwBE,GACxB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,SAAS,CAC3BhB,YAAY,EACZF,SAAUJ,EAASK,QALvB,sBAaJ,6BACE,6BACGE,EAAYkB,KAAI,SAAAC,GAAO,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAjGtC,GAAyBC,aC1BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce0e91cd.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    function getReorderedGoods(\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions,\n    ) {\n      const visibleGoods = [...goods];\n\n      visibleGoods.sort((g1, g2) => {\n        switch (sortType) {\n          case 'alphabet':\n            return g1.localeCompare(g2);\n\n          case 'length':\n            return g1.length - g2.length;\n\n          default:\n            return 0;\n        }\n      });\n\n      return isReversed ? visibleGoods.reverse() : visibleGoods;\n    }\n\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== 'alphabet',\n              },\n            )}\n            onClick={() => this.setState({ sortType: SortType.ALPHABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== 'length',\n              },\n            )}\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={() => this.setState(state => ({\n              isReversed: !state.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {(sortType === 'none' && !isReversed) || (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                isReversed: false,\n                sortType: SortType.NONE,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {sortedGoods.map(product => (\n              <li data-cy=\"Good\" key={product}>\n                {product}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}