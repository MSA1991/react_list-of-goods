{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSort","value","setState","handleRevers","handleReset","sortedGoods","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","type","classNames","onClick","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAkC,CAChCC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,WAAa,SAACC,GAAD,OACX,EAAKC,SAAS,CAAEL,SAAUI,KAP9B,EAUEE,aAAe,WACb,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAZzB,EAgBEK,YAAc,WACZ,EAAKF,SAAS,CACZH,YAAY,EACZF,SAAUJ,EAASK,QAnBzB,4CAuBE,WAAU,IAAD,OAuBP,IAAMO,EAtBN,SACEC,EADF,GAGG,IADCT,EACF,EADEA,SAAUE,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQb,GACN,KAAKJ,EAASkB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAINf,EAAaQ,EAAaQ,UAAYR,EAG3BS,CAAkBtB,EAAiBuB,KAAKrB,OAE5D,EAAiCqB,KAAKrB,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAElB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYvB,IAAaJ,EAASkB,WAGtCU,QAAS,kBAAM,EAAKrB,WAAWP,EAASkB,WAT1C,iCAcA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYvB,IAAaJ,EAASoB,SAGtCQ,QAAS,kBAAM,EAAKrB,WAAWP,EAASoB,SAT1C,4BAcA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAA2B,IAAfrB,IAGhBsB,QAASJ,KAAKd,aAThB,qBAcEN,IAAaJ,EAASK,OAASC,GAC/B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKb,YAHhB,sBAUJ,6BACGC,EAAYiB,KAAI,SAAAC,GAAO,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA5GpC,GAAyBC,aC1BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.32beaa17.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSort = (value: SortType) => (\n    this.setState({ sortType: value })\n  );\n\n  handleRevers = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    function getReorderedGoods(\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions,\n    ) {\n      const visibleGoods = [...goods];\n\n      visibleGoods.sort((g1, g2) => {\n        switch (sortType) {\n          case SortType.ALPHABET:\n            return g1.localeCompare(g2);\n\n          case SortType.LENGTH:\n            return g1.length - g2.length;\n\n          default:\n            return 0;\n        }\n      });\n\n      return isReversed ? visibleGoods.reverse() : visibleGoods;\n    }\n\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={this.handleRevers}\n          >\n            Reverse\n          </button>\n\n          {(sortType === SortType.NONE && !isReversed) || (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map(product => (\n            <li data-cy=\"Good\" key={product}>\n              {product}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}